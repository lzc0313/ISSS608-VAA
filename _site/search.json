[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "This Hands on exercise will be covering two topics\n\nProgramming Interactive Data Visualisation with R (First Part)\nProgramming Animated Statistical Graphics with (Second Part)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#learning-outcome",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#learning-outcome",
    "title": "Hands-on Exercise 3",
    "section": "2.1 Learning Outcome",
    "text": "2.1 Learning Outcome\nIn this hands-on exercise, you will learn how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#getting-started",
    "title": "Hands-on Exercise 3",
    "section": "2.2 Getting Started",
    "text": "2.2 Getting Started\nFirst, write a code chunk to check, install and launch the following R packages:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\nThe code chunk below will be used to accomplish the task.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#importing-data",
    "title": "Hands-on Exercise 3",
    "section": "2.3 Importing Data",
    "text": "2.3 Importing Data\nIn this section, Exam_data.csv provided will be used. Using read_csv() of readr package, import Exam_data.csv into R.\nThe code chunk below read_csv() of readr package is used to import Exam_data.csv data file into R and save it as an tibble data frame called exam_data.\n\nexam_data &lt;- read_csv(\"C:/lzc0313/ISSS608-VAA/Hands-on_Ex/Hands-on_Ex01/data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on Exercise 3",
    "section": "2.4 Interactive Data Visualisation - ggiraph methods",
    "text": "2.4 Interactive Data Visualisation - ggiraph methods\nggiraph  is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive.\nInteractive is made with ggplot geometries that can understand three arguments:\n\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\nData_id: a column of data-sets that contain an id to be associated with elements.\n\nIf it used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides. Refer to this article for more detail explanation.\n\n2.4.1 Tooltip effect with tooltip aesthetic\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#interactivity",
    "title": "Hands-on Exercise 3",
    "section": "2.5 Interactivity",
    "text": "2.5 Interactivity\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n2.5.1 Displaying multiple information on tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#interactivity-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#interactivity-1",
    "title": "Hands-on Exercise 3",
    "section": "2.6 Interactivity",
    "text": "2.6 Interactivity\nBy hovering the mouse pointer on an data point of interest, the student’s ID and Class will be displayed.\n\n2.6.1 Customising Tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\nRefer to Customizing girafe objects to learn more about how to customise ggiraph objects.\n\n\n\n2.6.2 Displaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n3.6.3 Hover effect with data_id aesthetic\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote that the default value of the hover css is hover_css = “fill:orange;”.\n\n\n2.6.4 Styling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote: Different from previous example, in this example the ccs customisation request are encoded directly.\n\n\n2.6.5 Combining tooltip and hover effect\nThere are time that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\n\n2.6.6 Click effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n:::\nWarning\nNote that click actions must be a string column in the dataset containing valid javascript instructions.\n\n\n2.6.7 Coordinated Multiple Views with ggiraph\nCoordinated multiple views methods has been implemented in the data visualisation below.\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on Exercise 3",
    "section": "2.7 Interactive Data Visualisation - plotly methods!",
    "text": "2.7 Interactive Data Visualisation - plotly methods!\nPlotly’s R graphing library create interactive web graphics from ggplot2 graphs and/or a custom interface to the (MIT-licensed) JavaScript library plotly.js inspired by the grammar of graphics. Different from other plotly platform, plot.R is free and open source.\nThere are two ways to create interactive graph by using plotly, they are:\n\nby using plot_ly(), and\nby using ggplotly()\n\n\n2.7.1 Creating an interactive scatter plot: plot_ly() method\nThe tabset below shows an example a basic interactive plot created by using plot_ly(). The code Chunk:\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n2.7.2 Working with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\n2.7.3 Creating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n2.7.4 Coordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\nThing to learn from the code chunk:\n\nhighlight_key() simply creates an object of class crosstalk::SharedData.\nVisit this link to learn more about crosstalk,"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on Exercise 3",
    "section": "2.8 Interactive Data Visualisation - crosstalk methods!",
    "text": "2.8 Interactive Data Visualisation - crosstalk methods!\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\n2.8.1 Interactive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n2.8.2 Linked brushing: crosstalk method\nCode chunk below is used to implement the coordinated brushing shown above.\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk:\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#reference",
    "title": "Hands-on Exercise 3",
    "section": "2.9 Reference",
    "text": "2.9 Reference\n\n2.9.1 ggiraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists.\n\n\n\n2.9.2 plotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#overview",
    "title": "Hands-on Exercise 3",
    "section": "3.1 Overview",
    "text": "3.1 Overview\nWhen telling a visually-driven data story, animated graphics tends to attract the interest of the audience and make deeper impression than static graphics. In this hands-on exercise, you will learn how to create animated data visualisation by using gganimate and plotly r packages. At the same time, you will also learn how to (i) reshape data by using tidyr package, and (ii) process, wrangle and transform data by using dplyr package.\n\n3.1.1 Basic concepts of animation\nWhen creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together.\n\n\n3.1.2 Terminology\nBefore we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\nTip\nBefore you start making animated graphs, you should first ask yourself: Does it makes sense to go through the effort? If you are conducting an exploratory data analysis, a animated graphic may not be worth the time investment. However, if you are giving a presentation, a few well-placed animated graphics can help an audience connect with your topic remarkably better than static counterparts."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#getting-started-1",
    "title": "Hands-on Exercise 3",
    "section": "3.2 Getting Started",
    "text": "3.2 Getting Started\n\n3.2.1 Loading the R packages\nFirst, write a code chunk to check, install and load the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\npackage 'gifski' successfully unpacked and MD5 sums checked  The downloaded binary packages are in     C:\\Users\\tskam\\AppData\\Local\\Temp\\RtmpAnvU4R\\downloaded_packages package 'gapminder' successfully unpacked and MD5 sums checked  The downloaded binary packages are in     C:\\Users\\tskam\\AppData\\Local\\Temp\\RtmpAnvU4R\\downloaded_packages package 'gganimate' successfully unpacked and MD5 sums checked  The downloaded binary packages are in     C:\\Users\\tskam\\AppData\\Local\\Temp\\RtmpAnvU4R\\downloaded_packages\n\n\n3.2.2 Importing the data\nIn this hands-on exercise, the Data worksheet from GlobalPopulation Excel workbook will be used.\nWrite a code chunk to import Data worksheet from GlobalPopulation Excel workbook by using appropriate R package from tidyverse family.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"C:/lzc0313/ISSS608-VAA/Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex3/data/GlobalPopulation.xls\",sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\nThings to learn from the code chunk above\n\nread_xls() of readxl package is used to import the Excel worksheet.\nmutate_each_() of dplyr package is used to convert all character data type into factor.\nmutate of dplyr package is used to convert data values of Year field into integer.\n\nUnfortunately, mutate_each_() was deprecated in dplyr 0.7.0. and funs() was deprecated in dplyr 0.8.0. In view of this, we will re-write the code by using mutate_at() as shown in the code chunk below.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"C:/lzc0313/ISSS608-VAA/Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex3/data/GlobalPopulation.xls\",sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\nInstead of using mutate_at(), across() can be used to derive the same outputs.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"C:/lzc0313/ISSS608-VAA/Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex3/data/GlobalPopulation.xls\",sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on Exercise 3",
    "section": "3.3 Animated Data Visualisation: gganimate methods",
    "text": "3.3 Animated Data Visualisation: gganimate methods\ngganimate extends the grammar of graphics as implemented by ggplot2 to include the description of animation. It does this by providing a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_*()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\n3.3.1 Building a static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\n3.3.2 Building the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\nThe animated bubble chart\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#animated-data-visualisation-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#animated-data-visualisation-plotly",
    "title": "Hands-on Exercise 3",
    "section": "3.4 Animated Data Visualisation: plotly",
    "text": "3.4 Animated Data Visualisation: plotly\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\n3.4.1 Building an animated bubble plot: ggplotly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using ggplotly() method.\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\nThe animated bubble plot above includes a play/pause button and a slider component for controlling the animation\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\n3.4.2 Building an animated bubble plot: plot_ly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using plot_ly() method.\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#reference-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hand-on_Ex03.html#reference-1",
    "title": "Hands-on Exercise 3",
    "section": "3.5 Reference",
    "text": "3.5 Reference\n\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Take-home_Ex/Take-home_ex1.html",
    "href": "Take-home_Ex/Take-home_ex1.html",
    "title": "Programme for International Student Assessment Education Survey (Singapore) : Exploratory Data Analysis",
    "section": "",
    "text": "This project examines the educational landscape in Singapore, with a focus on disparities among students from diverse backgrounds. Despite international recognition for achieving excellence with minimal differences between children from affluent and disadvantaged families, public perception suggests the existence of disparities. The project aims to investigate disparities between elite and neighborhood schools, students from varying socioeconomic backgrounds, and families with different immigration statuses. Insights gained from this study will contribute to an informed discussion on educational equity in Singapore.\n\n\n\nThe data used for this exercise was released on December 2022 from Programme for International Student Assessment(PISA). The organization survey every three years to observe the education systems worldwide through testing 15 year old students in the subjects of mathematics, reading, and science.\nThis for this exercise, will be using appropriate Exploratory Data Analysis (EDA)methods from R ggplot2 package to reveal:\n\nDistribution of Singapore students’ performance in mathematics, reading, and science\nRelationship between these performances with school, gender, and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_ex1.html#project-brief",
    "href": "Take-home_Ex/Take-home_ex1.html#project-brief",
    "title": "Programme for International Student Assessment Education Survey (Singapore) : Exploratory Data Analysis",
    "section": "",
    "text": "This project examines the educational landscape in Singapore, with a focus on disparities among students from diverse backgrounds. Despite international recognition for achieving excellence with minimal differences between children from affluent and disadvantaged families, public perception suggests the existence of disparities. The project aims to investigate disparities between elite and neighborhood schools, students from varying socioeconomic backgrounds, and families with different immigration statuses. Insights gained from this study will contribute to an informed discussion on educational equity in Singapore."
  },
  {
    "objectID": "Take-home_Ex/Take-home_ex1.html#project-objectives",
    "href": "Take-home_Ex/Take-home_ex1.html#project-objectives",
    "title": "Programme for International Student Assessment Education Survey (Singapore) : Exploratory Data Analysis",
    "section": "",
    "text": "The data used for this exercise was released on December 2022 from Programme for International Student Assessment(PISA). The organization survey every three years to observe the education systems worldwide through testing 15 year old students in the subjects of mathematics, reading, and science.\nThis for this exercise, will be using appropriate Exploratory Data Analysis (EDA)methods from R ggplot2 package to reveal:\n\nDistribution of Singapore students’ performance in mathematics, reading, and science\nRelationship between these performances with school, gender, and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_ex1.html#install-load-r-packages",
    "href": "Take-home_Ex/Take-home_ex1.html#install-load-r-packages",
    "title": "Programme for International Student Assessment Education Survey (Singapore) : Exploratory Data Analysis",
    "section": "2.1 Install & load R packages",
    "text": "2.1 Install & load R packages\nInstalling necessary R packages that will be needed for this exercise. To load the requried packages the code chunk below use pacman::p_load() function is used to unsure that the packages are load to the current R work environment.\n\npacman::p_load(tidyverse, ggdist, ggplot2, ggthemes, gridExtra, ggrepel, patchwork, hrbrthemes, dplyr)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_ex1.html#importing-pisa-data",
    "href": "Take-home_Ex/Take-home_ex1.html#importing-pisa-data",
    "title": "Programme for International Student Assessment Education Survey (Singapore) : Exploratory Data Analysis",
    "section": "2.2 Importing PISA Data",
    "text": "2.2 Importing PISA Data\nFor this exercise, we are only examining the Singapore students. So the data load in the below code chunk only contains\n\nsg_stu &lt;- readRDS(\"C:/lzc0313/ISSS608-VAA/In-class_Ex/In-class_ex1/data/stu_qqq_SG.rds\")\n\nAfter examine the data using dim(),names(),summary() functions found that most of the variables from the survey is not needed for this exercise, to make it more convinient and efficient, we only extract the variables needed for this exercise as a new table for later use.\n\n# Selecting specific columns from sg_stu\nselected_columns &lt;- sg_stu[, c(\"CNTSCHID\", \"ST004D01T\", \"CNTSTUID\",\"ESCS\")]\n\n# Calculate the mean for each subject\nmean_pv_math &lt;- rowMeans(sg_stu[, c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \n                                    \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\")], na.rm = TRUE)\n\nmean_pv_read &lt;- rowMeans(sg_stu[, c(\"PV1READ\", \"PV2READ\", \"PV3READ\", \"PV4READ\", \"PV5READ\", \n                                    \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\")], na.rm = TRUE)\n\nmean_pv_scie &lt;- rowMeans(sg_stu[, c(\"PV1SCIE\", \"PV2SCIE\", \"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\", \n                                    \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")], na.rm = TRUE)\n\n# Combine selected columns and new calculations into sg_stu_eda\nsg_stu_eda &lt;- cbind(selected_columns, mean_pv_math, mean_pv_read, mean_pv_scie)\n\nTotal of 7 Variables are used\n\nCNTSCHID, (Intl. School ID)\nST004D01T, (Students gender)\nCNTSTUID, (Intl. Student ID)\nESCS, (Index of economic, social, and culture status)\nmean_pv_math, (average of plausible value 1-10 of mathematics)\nmean_pv_read, (average of plausible value 1-10 of reading)\nmean_pv_scie, (average of plausible value 1-10 of science)\n\n\nhead(sg_stu_eda,10)\n\n   CNTSCHID ST004D01T CNTSTUID    ESCS mean_pv_math mean_pv_read mean_pv_scie\n1  70200052         1 70200001  0.1836     605.2533     667.4296     639.7873\n2  70200134         2 70200002  0.8261     689.9528     627.6078     672.0703\n3  70200112         2 70200003 -1.0357     676.7768     582.9252     660.0384\n4  70200004         2 70200004 -0.9606     401.0528     361.3969     343.6425\n5  70200152         1 70200005  0.0856     436.1151     475.6763     479.2390\n6  70200043         1 70200006  0.1268     518.1055     431.4652     476.0031\n7  70200049         2 70200007 -0.0154     707.9552     704.2219     646.9278\n8  70200107         2 70200008  1.1558     620.4136     524.4010     573.1763\n9  70200012         1 70200009  1.4654     735.7920     713.1340     691.0124\n10 70200061         2 70200010  0.5199     555.4636     504.6734     548.3434"
  },
  {
    "objectID": "Take-home_Ex/Take-home_ex1.html#distribution-anaylsis",
    "href": "Take-home_Ex/Take-home_ex1.html#distribution-anaylsis",
    "title": "Programme for International Student Assessment Education Survey (Singapore) : Exploratory Data Analysis",
    "section": "3.1 Distribution Anaylsis",
    "text": "3.1 Distribution Anaylsis\nBefore doing any further analysis, it is always good to look at the distribution of the data, so we can look at the distribution of the three subjects using histograms.\n\nDistribution of subjectscodes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh1 &lt;- ggplot(data=sg_stu_eda, aes(x = mean_pv_math)) +\n  geom_histogram(bins=20, color=\"grey25\", fill=\"grey90\") + \n  ggtitle(\"Math\")\nh2 &lt;- ggplot(data=sg_stu_eda, aes(x = mean_pv_scie)) +\n  geom_histogram(bins=20, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Science \")\nh3 &lt;- ggplot(data=sg_stu_eda, aes(x = mean_pv_read)) +\n  geom_histogram(bins=20, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Reading\")\n\npatchwork &lt;- h1 + h2 + h3\npatchwork &lt;- patchwork + plot_layout(ncol = 3)\npatchwork & theme_economist()\n\n\n\n\nThe analysis of Singapore students’ performance across mathematics, science, and reading reveals a notable strength in mathematics, evidenced by a maximum score of 842.72 that surpasses the top scores in science (801.9) and reading (797.59). The data indicates a wider range of abilities in reading, as seen by the lowest minimum score of 158.5626, compared to mathematics (262.564) and science (242.0194), suggesting that students excel in numerical and scientific reasoning."
  },
  {
    "objectID": "Take-home_Ex/Take-home_ex1.html#stacked-density-plot",
    "href": "Take-home_Ex/Take-home_ex1.html#stacked-density-plot",
    "title": "Programme for International Student Assessment Education Survey (Singapore) : Exploratory Data Analysis",
    "section": "3.2 Stacked Density Plot",
    "text": "3.2 Stacked Density Plot\nExamining distributions individually might not provide a clear comparison; however, a stacked density plot could facilitate a more straightforward comparison across the subjects by overlaying their distributions.\n\nStacked Density plotCodes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(sg_stu_eda) +\n  geom_density(aes(x = mean_pv_math, fill = \"Mathematics\"), alpha = 0.5) +\n  geom_density(aes(x = mean_pv_read, fill = \"Reading\"), alpha = 0.5) +\n  geom_density(aes(x = mean_pv_scie, fill = \"Science\"), alpha = 0.5) +\n  ggtitle(\"Density Plot of Scores by Subject\") +\n  xlab(\"Scores\") +\n  ylab(\"Density\") +\n  scale_fill_manual(values = c(\"Mathematics\" = \"red\", \"Reading\" = \"green\", \"Science\" = \"blue\"))\n\n\n\n\nThe density plot reinforces the findings from the distribution analysis, showing that Mathematics is a standout subject for Singapore students, with a distribution indicating not only higher peak scores but also a broader range of high achievers. The overlap between Science and Reading suggests similar performance levels in these subjects, with a less pronounced rightward extension than Mathematics, implying fewer high scorers. The shape and spread of the distributions indicate variability in student performance across all subjects, with Mathematics displaying a potential for both higher peaks and greater spread, hinting at a wider variance in achievement. These visual cues complement the earlier analysis, underscoring Mathematics as a strong suit in the Singapore education system while highlighting the need for continued focus on literacy to address the lower performance and greater variability observed in Reading."
  },
  {
    "objectID": "Take-home_Ex/Take-home_ex1.html#school-impact-on-singapore-student-subjects-score",
    "href": "Take-home_Ex/Take-home_ex1.html#school-impact-on-singapore-student-subjects-score",
    "title": "Programme for International Student Assessment Education Survey (Singapore) : Exploratory Data Analysis",
    "section": "3.3 School Impact on Singapore Student Subjects Score",
    "text": "3.3 School Impact on Singapore Student Subjects Score\nIt is also important to examine whether students in different schools exhibit variations in their performance across various subjects, as some schools may excel in teaching certain subjects compared to others. Since the school id has a very large sample, we are using a heatmap to display the significance.\n\nHeatmapCodes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsg_stu_eda_long &lt;- sg_stu_eda %&gt;%\n  pivot_longer(\n    cols = starts_with(\"mean_pv_\"), \n    names_to = \"subject\", \n    values_to = \"score\"\n  ) %&gt;%\n  mutate(CNTSCHID = as.factor(CNTSCHID), \n         subject = factor(subject, levels = c(\"mean_pv_math\", \"mean_pv_read\", \"mean_pv_scie\"),\n                          labels = c(\"Mathematics\", \"Reading\", \"Science\")))\n\nggplot(sg_stu_eda_long, aes(x = CNTSCHID, y = subject, fill = score)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"blue\") +  # Adjust the color scale as needed\n  theme_minimal() +\n  labs(x = \"School ID\", y = \"Subject\", \n       title = \"Heatmap of Subject Scores Across Schools\")\n\n\n\n\nFrom the heatmap presented earlier, several noteworthy observations can be made. Firstly, it’s evident that students from certain schools consistently maintain similar scores across all three subjects. However, in other schools, there is a noticeable trend where science and mathematics scores are higher, while reading scores appear to be comparatively lower.\nFurthermore, it’s interesting to note that schools achieving high scores in mathematics also tend to perform well in science, suggesting a potential correlation between these two subjects. Additionally, there are instances, albeit rare, where certain schools excel in reading, outperforming their scores in the other two subjects. These observations indicate the presence of distinct patterns and potentially valuable insights into the performance of students across different schools and subjects."
  },
  {
    "objectID": "Take-home_Ex/Take-home_ex1.html#gender-impact-on-singapore-student-subjects-score",
    "href": "Take-home_Ex/Take-home_ex1.html#gender-impact-on-singapore-student-subjects-score",
    "title": "Programme for International Student Assessment Education Survey (Singapore) : Exploratory Data Analysis",
    "section": "3.4 Gender Impact on Singapore Student Subjects Score",
    "text": "3.4 Gender Impact on Singapore Student Subjects Score\nNext, we examine the gender impact on Singapore student’s different subject scores, as from what most people typically knows different gender perform differently in certain subjects, so it is important to check that if gender shows significance on the subjects score.\n\nBoxplotCodes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsg_stu_eda_long$ST004D01T &lt;- factor(sg_stu_eda_long$ST004D01T, levels = c(\"1\", \"2\"), labels = c(\"Female\", \"Male\"))\n\nggplot(sg_stu_eda_long, aes(x = ST004D01T, y = score, fill = subject)) +\n  geom_boxplot(position = position_dodge(1)) +\n  stat_summary(fun = mean, geom = \"point\", shape = 20, size = 3, color = \"darkred\", position = position_dodge(1)) +\n  stat_summary(fun = mean, geom = \"text\", aes(label = round(..y.., 1)), vjust = 1.5, color=\"darkblue\",position=position_dodge(1)) +\n  stat_summary(fun = median, geom = \"line\", size = 0.5, color = \"darkblue\", position = position_dodge(1)) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1), \n        legend.position = \"bottom\") +\n  labs(x = \"Gender\", y = \"Score\", \n       title = \"Boxplot of Subject Scores Across Gender\", \n       fill = \"Subjects\")\n\n\n\n\n\nMathematics: Males exhibit a higher average score compared to females, with the mean score for males being approximately 11 points higher. This suggests a notable performance advantage for males in mathematics within this sample.\nReading: Females outperform males by a substantial margin, with their average score being approximately 20 points higher. This considerable difference highlights a stronger performance in reading for females.\nScience: Males again have a higher average score, with the difference being approximately 6 points. While this advantage is less pronounced than in mathematics, it still indicates better performance by males in science.\n\nThe interquartile range (IQR), which represents the middle 50% of scores, are different across genders for each subject. Males tend to have larger IQR across all subject compare to female, a larger IQR indicates more variability in student performance.The presence of outliers, as indicated by points beyond the whiskers of the boxplots, suggesting that there are students with scores that are unusually low or high compared to their peers.\nFurther analysis might be needed: Adding confidence intervals around the mean could provide insight into the statistical significance of the differences in means between genders."
  },
  {
    "objectID": "Take-home_Ex/Take-home_ex1.html#index-of-economic-social-cultural-status-impact-on-singapore-student-subjects-score",
    "href": "Take-home_Ex/Take-home_ex1.html#index-of-economic-social-cultural-status-impact-on-singapore-student-subjects-score",
    "title": "Programme for International Student Assessment Education Survey (Singapore) : Exploratory Data Analysis",
    "section": "3.5 Index of Economic, Social, Cultural Status Impact on Singapore Student Subjects Score",
    "text": "3.5 Index of Economic, Social, Cultural Status Impact on Singapore Student Subjects Score\nFrom the dataset, it is observe that the Index of Economic, Social, Cultural Status has differnt positive and negative values, and it seem that differnt values correspond with different range of subject scores. So, there might be relationship between this two variables, let use some EDA techniques to explore.\nFirst, since the ESCS value as a wide range, we can use bin function ntile() to divide ESCS values into quantiles.\n\ndata_escs &lt;- sg_stu_eda %&gt;%\n  filter(!is.na(ESCS)) %&gt;% # Remove rows with NA in ESCS\n  mutate(ESCS_bin = ntile(ESCS, 8)) # Bin ESCS into 8 bins\n\n# Now, summarize to find the range of ESCS in each bin\nbin_ranges &lt;- data_escs %&gt;%\n  group_by(ESCS_bin) %&gt;%\n  summarise(\n    min_ESCS = min(ESCS, na.rm = TRUE),\n    max_ESCS = max(ESCS, na.rm = TRUE)\n  )\n\nbin_ranges\n\n# A tibble: 8 × 3\n  ESCS_bin min_ESCS max_ESCS\n     &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1        1   -3.55    -0.788\n2        2   -0.786   -0.233\n3        3   -0.232    0.174\n4        4    0.174    0.482\n5        5    0.482    0.706\n6        6    0.706    0.904\n7        7    0.904    1.14 \n8        8    1.14     3.28 \n\n\n\nBoxplot Subject vs ESCS binsCodes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data_escs, aes(x = factor(ESCS_bin), y = mean_pv_math)) +\n  geom_boxplot() +\n  labs(x = 'ESCS Bin', y = 'Math Score') +\n  theme_bw()\nggplot(data_escs, aes(x = factor(ESCS_bin), y = mean_pv_scie)) +\n  geom_boxplot() +\n  labs(x = 'ESCS Bin', y = 'Science Score') +\n  theme_bw()\nggplot(data_escs, aes(x = factor(ESCS_bin), y = mean_pv_read)) +\n  geom_boxplot() +\n  labs(x = 'ESCS Bin', y = 'Reading Score') +\n  theme_bw()\n\n\n\n\nFrom the exploratory data analysis (EDA), it is evident that as the Index of Economic, Social, Cultural Status (ESCS) increases from bin 1 to bin 8, the scores in all three subjects exhibit a consistent upward trend. This observation holds true despite the presence of some outliers within each bin, which can affect the overall sample distribution. Furthermore, it is notable that the interquartile range (IQR) increases progressively as we move from lower ESCS bins to higher ones, indicating a widening spread of scores. This widening IQR suggests a greater degree of variability in scores among students as the ESCS index increases, reflecting the diversity in academic performance among students with different socio-economic backgrounds."
  },
  {
    "objectID": "In-class_Ex/In-class_ex1/In-class_ex1.html",
    "href": "In-class_Ex/In-class_ex1/In-class_ex1.html",
    "title": "In-class_ex1",
    "section": "",
    "text": "This is the In Class Exercise 1 Lets GOoOoOoO!"
  },
  {
    "objectID": "In-class_Ex/In-class_ex1/In-class_ex1.html#loading-r-packages",
    "href": "In-class_Ex/In-class_ex1/In-class_ex1.html#loading-r-packages",
    "title": "In-class_ex1",
    "section": "Loading R packages",
    "text": "Loading R packages\nIn this in-class exercise, two R packages will be used.\nThey are:\n\ntidyverse,\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse,haven)\n\n##Import PISA Data\nThe code chunk below uses read_sas()of haven to import PISA data in R environment.\n\nstu_qqq &lt;-read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;% \n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- \n  read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "This exercise will be introduced to several ggplot2 extension for creating statistical graphics."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html#install-and-load-r-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html#install-and-load-r-libraries",
    "title": "Hands-on Exercise 2",
    "section": "2.1 Install and Load R Libraries",
    "text": "2.1 Install and Load R Libraries\nBeside tidyverse which is introduced in hands on exercies 1, four more R packages will be used. They are:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode Chunk below is used to check the packages are installed and also load them into the current R environment.\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n\nAfter checking there is no issues with installing and uploading the packages, we proceed to import the data used for this exercise."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html#importing-data",
    "title": "Hands-on Exercise 2",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\nFor this exercise, Exam_data.csv is introduced. It consist of year end examination grades of a cohort of primary 3 students from a local school.\nCode chunk below imports the data mentioned above into current R environment using read_csv() function of readr package. readr is one of the tidyverse package.\n\nexam_data &lt;- read_csv(\"C:/lzc0313/ISSS608-VAA/Hands-on_Ex/Hands-on_Ex01/data/Exam_data.csv\")\n\nThere are 7 attributes and 322 columns in the exam_data. Four of the attributes are categorical data type and others are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-on Exercise 2",
    "section": "2.3 Beyond ggplot2 Annotation: ggrepel",
    "text": "2.3 Beyond ggplot2 Annotation: ggrepel\nOne of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\n# Your ggplot code\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\nggrepel is an extension of ggplot2 which provides geoms for ggplot2 to repel overlapping text as in the above graph.\nWe simply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\n2.3.1 Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html#beyond-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html#beyond-ggplot2-themes",
    "title": "Hands-on Exercise 2",
    "section": "2.4 Beyond ggplot2 Themes",
    "text": "2.4 Beyond ggplot2 Themes\nThere are 8 build-in themes in ggplot2, they are:theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_void() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\nMore about ggplot2 themes (link).\n\n2.4.1 Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\nBelow is the example of a economist theme.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\n\n\n2.4.2 hrbthemes package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\nThe second goal of hrbrthemes centers around the productivity for a production workflow. learn more\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\n\nWhat can we learn from the above code chunk?\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hand-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Exercise 2",
    "section": "2.5 Beyond Single Graph",
    "text": "2.5 Beyond Single Graph\nIt is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs. In this section, you will learn how to create composite plot by combining multiple graphs. First, let us create three statistical graphics by using the code chunk below.\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\nNext,\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\nLastly, a scatterplot.\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n2.5.1 Creating Composite Graphics: pathwork methods\nPathwork from the ggplot2 extension is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\n\n\n2.5.2 Combining two ggplot2 graphs\nbelow codes combines two histogram.\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\n2.5.3 Combining three ggplot2 graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\nMore about this topics, refer to Plot Assembly.\n2.5.4 Creating a composite figure with tag\nTo identify the subplots in text, patchwork also provides auto-tagging capabilities shown below.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\n2.5.5 Creating figure with insert\nOther than putting the graphs side by side, we can put graph on top or below one another using inset_element() of patchwork.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\n\n\n\n2.5.6 Creating composite figure using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hand-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hand-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below used p_load() of pacman package to check if tidyverse packages are installed in the system. if they are,then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hand-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hand-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below used p_load() of pacman package to check if tidyverse packages are installed in the system. if they are,then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hand-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hand-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  }
]